{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/new-list/new-list.component.ts","./src/app/pages/new-list/new-list.component.html","./src/app/pages/new-task/new-task.component.ts","./src/app/pages/new-task/new-task.component.html","./src/app/pages/task-view/task-view.component.ts","./src/app/pages/task-view/task-view.component.html","./src/app/task.service.ts","./src/app/web.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\nimport { NewListComponent } from './pages/new-list/new-list.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'lists', pathMatch: 'full'},\n  { path: 'lists', component: TaskViewComponent},\n  { path: 'lists/:listId', component: TaskViewComponent},\n  { path: 'new-list', component: NewListComponent},\n  { path: 'lists/:listId/new-task', component: NewTaskComponent}\n  \n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Task Manager';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\nimport { NewListComponent } from './pages/new-list/new-list.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskViewComponent,\n    NewListComponent,\n    NewTaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { Router } from '@angular/router';\nimport List from 'src/app/models/list';\n\n@Component({\n  selector: 'app-new-list',\n  templateUrl: './new-list.component.html',\n  styleUrls: ['./new-list.component.scss']\n})\nexport class NewListComponent implements OnInit {\n\n  constructor( private taskService: TaskService, private router: Router) { }\n\n  ngOnInit(){\n  }\n    addList(value: string){\n      this.taskService.createList(value).subscribe((list:List)=> this.router.navigate(['/lists',list._id]));\n    }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box form-group\">\n        <h1 class=\"title\">\n            Create a new List\n        </h1>\n        <input #ListInput type=\"text\" class=\"form-control has-background-light\" placeholder=\"Enter Lists\">\n        <button class=\"btn white-text\" routerLink=\"/\">Cancel</button>\n        <button class=\"btn btn-primary\" (click)=\"addList(ListInput.value)\">Add</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrls: ['./new-task.component.scss']\n})\nexport class NewTaskComponent implements OnInit {\n\n  listId: string;\n\n  constructor(\n    private taskService: TaskService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.route.params.subscribe((params: Params)=> this.listId =  params.listId);\n   }\n\n  ngOnInit(): void {\n  }\n\n  addTask(value: string){\n    this.taskService.createTask(this.listId, value)\n      .subscribe(()=> this.router.navigate(['../'], { relativeTo: this.route }));\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box form-group\">\n        <h1 class=\"title\">\n            Create a new Task\n        </h1>\n        <input #taskInput type=\"text\" class=\"form-control has-background-light\" placeholder=\"Enter Task\">\n        <button class=\"btn white-text\" routerLink=\"../\">Cancel</button>\n        <button class=\"btn btn-primary\" (click)=\"addTask(taskInput.value)\">Add</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport List from 'src/app/models/list';\nimport Task from 'src/app/models/task';\nimport { TaskService } from 'src/app/task.service';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\n\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent implements OnInit {\n  lists: List[] = [];\n  tasks: Task[] = [];\n  listId: string;\n\n  constructor(\n    private taskService: TaskService,\n    private route: ActivatedRoute,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.taskService.getLists()\n      .subscribe((lists: List[])=> this.lists = lists);\n\n    this.route.params.subscribe((params: Params) => {\n      this.listId = params.listId;\n      if(!this.listId) return;\n      this.taskService.getTasks(this.listId).subscribe((tasks: Task[])=> this.tasks = tasks);\n    });\n  }\n\n  onTaskClick(task: Task) {\n    this.taskService.setCompleted(this.listId, task).subscribe(() => task.completed= !task.completed);\n  }\n\n  deleteTask(task: Task){\n    this.taskService.deleteTask(this.listId, task._id)\n      .subscribe(()=> this.tasks = this.tasks.filter(t => t._id != task._id));\n  }\n  deleteList(list: List){\n    this.taskService.deleteList(list._id)\n      .subscribe(() => this.lists= this.lists.filter(l => l._id !=list._id) );\n  }\n\n  addTaskClick(){\n    if(!this.listId){\n      alert(\"Please select a List to add tasks to\");\n      return;\n    }\n    this.router.navigate(['./new-task'], { relativeTo: this.route});\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"task-manager-container\">\n        <div class=\"sidebar\">\n            <h1 class=\"title has-text-primary\">Lists</h1>\n            <div class=\"list-menu\">\n                <a class=\"list-menu-item\" *ngFor=\"let list of lists \" [routerLink]=\"['/lists', list._id]\" routerLinkActive = \"is-active\">\n                    <p class=\"white-text\">\n                        {{ list.title}}\n                        <span class=\"pull-right task-delete btn-rounded-corners\" (click)= \"deleteList(list)\">X</span>\n                    </p>\n                </a>\n            </div>\n            <button class=\"btn-primary btn-rounded-corners\" routerLink=\"/new-list\">Add List</button>\n        </div>\n        <div class=\"task-list-container\">\n            <h1 class=\"title has-text-primary\">Tasks</h1>\n            <div class=\"task\" [class.complete]=\"task.completed\" *ngFor= \"let task of tasks\" (click)=\"onTaskClick(task)\">\n                <p class=\"white-text\">\n                    {{task.title}}\n                    <span class=\"pull-right task-delete btn-rounded-corners\" (click)= \"deleteTask(task)\">X</span>\n                </p>\n            </div>\n            <button class=\"btn btn-primary add-button\" (click)=\"addTaskClick()\">\n                Add Task\n            </button>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport Task from './models/task';\nimport { WebService } from './web.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private webService: WebService) { }\n\n  getLists() {\n    return this.webService.get('lists');\n  }\n\n  createList(title: string) {\n    return this.webService.post('lists', { title});\n  }\n\n  getTasks(listId: string) {\n    return this.webService.get(`lists/${listId}/tasks`);\n  }\n\n  createTask(listId: string, title: string) {\n    return this.webService.post(`lists/${listId}/tasks`, {title});\n  }\n\n  deleteList(listId: string) {\n    return this.webService.delete(`lists/${listId}`);\n  }\n\n  deleteTask(listId: string, taskId: string) {\n    return this.webService.delete(`lists/${listId}/tasks/${taskId}`);\n  }\n\n  setCompleted(listId: string, task: Task) {\n    return this.webService.patch(`lists/${listId}/tasks/${task._id}`, { completed: !task.completed});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebService {\n  readonly ROOT_URL;\n  constructor(private http: HttpClient) {\n    this.ROOT_URL = \"https://annie-taskmanager.herokuapp.com\";\n   }\n\n   get(uri: string) {\n     return this.http.get(`${this.ROOT_URL}/${uri}`);\n   }\n\n   post(uri: string, payload: Object ) {\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n\n   patch(uri: string, payload: Object) {\n    return this.http.patch(`${this.ROOT_URL}/${uri}`, payload);\n  }\n\n   delete(uri: string) {\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}